diff --git a/config/cmake/config/CMakeLists.txt b/config/cmake/config/CMakeLists.txt
index 97c9cfe..69602a4 100755
--- a/config/cmake/config/CMakeLists.txt
+++ b/config/cmake/config/CMakeLists.txt
@@ -93,14 +93,14 @@ PERFORM_CMAKE_TEST(vxl_platform_tests.cxx VCL_HAS_NAMESPACES)
 PERFORM_CMAKE_TEST(vxl_platform_tests.cxx VCL_ALLOWS_NAMESPACE_STD)
 PERFORM_CMAKE_TEST(vxl_platform_tests.cxx VCL_NEEDS_NAMESPACE_STD)
   SET_INVERT(VCL_NEEDS_NAMESPACE_STD "${VCL_NEEDS_NAMESPACE_STD}")
-PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_HAS_SLICED_DESTRUCTOR_BUG)
+#PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_HAS_SLICED_DESTRUCTOR_BUG)
   SET_INVERT(VCL_HAS_SLICED_DESTRUCTOR_BUG "${VCL_HAS_SLICED_DESTRUCTOR_BUG}")
-PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_HAS_WORKING_STRINGSTREAM)
+#PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_HAS_WORKING_STRINGSTREAM)
 PERFORM_CMAKE_TEST(vxl_platform_tests.cxx VXL_UNISTD_USLEEP_IS_VOID)
   SET_INVERT(VXL_UNISTD_USLEEP_IS_VOID "${VXL_UNISTD_USLEEP_IS_VOID}")
 PERFORM_CMAKE_TEST(vxl_platform_tests.cxx VXL_STDLIB_HAS_QSORT)
 PERFORM_CMAKE_TEST(vxl_platform_tests.cxx VXL_C_MATH_HAS_LROUND)
-PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_HAS_LFS)
+#PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_HAS_LFS)
 PERFORM_CMAKE_TEST(vxl_platform_tests.cxx VXL_HAS_DBGHELP_H)
 
 # Test how to define a template specialization, and whether
@@ -221,7 +221,7 @@ ENDIF(VCL_INCLUDE_CXX_0X)
 
 
 # check for hardware support for sse2 with the current compiler flags
-PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VXL_HAS_SSE2_HARDWARE_SUPPORT)
+#PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VXL_HAS_SSE2_HARDWARE_SUPPORT)
 
 # if no support right now, see if the support exists if some flags
 # are added.  This can be used to give the user some useful info.
@@ -229,7 +229,7 @@ IF(NOT VXL_HAS_SSE2_HARDWARE_SUPPORT)
   IF(CMAKE_COMPILER_IS_GNUCXX)
     SET(VXL_SSE_TEST_FLAG_BACKUP ${CMAKE_REQUIRED_FLAGS})
     SET(CMAKE_REQUIRED_FLAGS " -msse2 ${VXL_SSE_TEST_FLAG_BACKUP} ")
-    PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VXL_SSE2_HARDWARE_SUPPORT_POSSIBLE)
+    #PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VXL_SSE2_HARDWARE_SUPPORT_POSSIBLE)
     SET( VXL_SSE2_HARDWARE_SUPPORT_POSSIBLE_HELP
       "The current compiler flags do not allow the SSE2 instructions to be used. "
       "It looks like if you add the flag '-msse2' you will be able to use the "
@@ -265,7 +265,8 @@ ENDIF(VXL_HAS_EMMINTRIN_H)
 #
 
 IF(VCL_CXX_HAS_HEADER_COMPLEX)
-  PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_COMPLEX_POW_WORKS)
+  #PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_COMPLEX_POW_WORKS)
+  set(VCL_COMPLEX_POW_WORKS OFF)
 ENDIF(VCL_CXX_HAS_HEADER_COMPLEX)
 
 
@@ -313,7 +314,8 @@ IF(NOT VCL_CAN_DO_IMPLICIT_TEMPLATES)
   SET(VCL_USE_IMPLICIT_TEMPLATES 0)
 ENDIF(NOT VCL_CAN_DO_IMPLICIT_TEMPLATES)
 
-PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_CHAR_IS_SIGNED)
+#PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_CHAR_IS_SIGNED)
+
 
 #
 # Check type sizes
@@ -381,17 +383,17 @@ MATH(EXPR VXL_ADDRESS_BITS 8*${VXL_SIZEOF_SIZE_T} )
 # Check numeric_limits infinity stuff
 #
 
-IF(VCL_CXX_HAS_HEADER_LIMITS)
-  PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_NUMERIC_LIMITS_HAS_INFINITY)
-  IF(VCL_CXX_HAS_HEADER_CFLOAT)
-    PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_PROCESSOR_HAS_INFINITY)
-  ELSE(VCL_CXX_HAS_HEADER_CFLOAT)
-    SET(VCL_PROCESSOR_HAS_INFINITY 0)
-  ENDIF(VCL_CXX_HAS_HEADER_CFLOAT)
-ELSE(VCL_CXX_HAS_HEADER_LIMITS)
+# IF(VCL_CXX_HAS_HEADER_LIMITS)
+#    PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_NUMERIC_LIMITS_HAS_INFINITY)
+#   IF(VCL_CXX_HAS_HEADER_CFLOAT)
+#     PERFORM_CMAKE_TEST_RUN(vxl_platform_tests.cxx VCL_PROCESSOR_HAS_INFINITY)
+#   ELSE(VCL_CXX_HAS_HEADER_CFLOAT)
+#     SET(VCL_PROCESSOR_HAS_INFINITY 0)
+#   ENDIF(VCL_CXX_HAS_HEADER_CFLOAT)
+#ELSE(VCL_CXX_HAS_HEADER_LIMITS)
   SET(VCL_NUMERIC_LIMITS_HAS_INFINITY 0)
   SET(VCL_PROCESSOR_HAS_INFINITY 0)
-ENDIF(VCL_CXX_HAS_HEADER_LIMITS)
+#ENDIF(VCL_CXX_HAS_HEADER_LIMITS)
 
 
 #
